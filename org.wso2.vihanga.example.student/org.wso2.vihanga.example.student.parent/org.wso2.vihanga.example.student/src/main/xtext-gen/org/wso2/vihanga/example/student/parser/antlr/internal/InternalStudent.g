/*
 * generated by Xtext 2.9.2
 */
grammar InternalStudent;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.wso2.vihanga.example.student.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.wso2.vihanga.example.student.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.wso2.vihanga.example.student.services.StudentGrammarAccess;

}

@parser::members {

 	private StudentGrammarAccess grammarAccess;

    public InternalStudentParser(TokenStream input, StudentGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected StudentGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getStudentsStudentParserRuleCall_0());
			}
			lv_students_0_0=ruleStudent
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"students",
					lv_students_0_0,
					"org.wso2.vihanga.example.student.Student.Student");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleStudent
entryRuleStudent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStudentRule()); }
	iv_ruleStudent=ruleStudent
	{ $current=$iv_ruleStudent.current; }
	EOF;

// Rule Student
ruleStudent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Student'
		{
			newLeafNode(otherlv_0, grammarAccess.getStudentAccess().getStudentKeyword_0());
		}
		(
			(
				lv_id_1_0=RULE_ID
				{
					newLeafNode(lv_id_1_0, grammarAccess.getStudentAccess().getIdIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStudentRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getStudentAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStudentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_age_3_0=RULE_INT
				{
					newLeafNode(lv_age_3_0, grammarAccess.getStudentAccess().getAgeINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStudentRule());
					}
					setWithLastConsumed(
						$current,
						"age",
						lv_age_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStudentAccess().getAddressAddressParserRuleCall_4_0());
				}
				lv_address_4_0=ruleAddress
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStudentRule());
					}
					set(
						$current,
						"address",
						lv_address_4_0,
						"org.wso2.vihanga.example.student.Student.Address");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getStudentAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleAddress
entryRuleAddress returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddressRule()); }
	iv_ruleAddress=ruleAddress
	{ $current=$iv_ruleAddress.current; }
	EOF;

// Rule Address
ruleAddress returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Address'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddressAccess().getAddressKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddressAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='StreetAddress'
		{
			newLeafNode(otherlv_2, grammarAccess.getAddressAccess().getStreetAddressKeyword_2());
		}
		(
			(
				lv_streetAddress_3_0=RULE_STRING
				{
					newLeafNode(lv_streetAddress_3_0, grammarAccess.getAddressAccess().getStreetAddressSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddressRule());
					}
					setWithLastConsumed(
						$current,
						"streetAddress",
						lv_streetAddress_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getAddressAccess().getCommaKeyword_4());
		}
		otherlv_5='City'
		{
			newLeafNode(otherlv_5, grammarAccess.getAddressAccess().getCityKeyword_5());
		}
		(
			(
				lv_city_6_0=RULE_STRING
				{
					newLeafNode(lv_city_6_0, grammarAccess.getAddressAccess().getCitySTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddressRule());
					}
					setWithLastConsumed(
						$current,
						"city",
						lv_city_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getAddressAccess().getCommaKeyword_7());
		}
		otherlv_8='PostalCode'
		{
			newLeafNode(otherlv_8, grammarAccess.getAddressAccess().getPostalCodeKeyword_8());
		}
		(
			(
				lv_postalCode_9_0=RULE_INT
				{
					newLeafNode(lv_postalCode_9_0, grammarAccess.getAddressAccess().getPostalCodeINTTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddressRule());
					}
					setWithLastConsumed(
						$current,
						"postalCode",
						lv_postalCode_9_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getAddressAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
